% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_component_summary_mongo_ng.R
\name{get_component_summary_mongo_ng}
\alias{get_component_summary_mongo_ng}
\title{get_component_summary_mongo_ng}
\usage{
get_component_summary_mongo_ng(output)
}
\arguments{
\item{output}{the output list resulting from the function get_coord_shares}
}
\value{
A data frame containing summary data by each coordinated component:
the proportion of coordinated shares over the total shares (coorshare_ratio), the average coordinated score (avg_cooRscore),
a measure (gini) of how much the coordinated shares concern a more or less large number of domains,
the top 5 domains (by rank) shared in a coodinated manner,
the total number of domains,
the \href{https://www.newsguardtech.com/}{News Guard} average \href{https://www.newsguardtech.com/ratings/rating-process-criteria/}{score} of the domains shared by the components,
the proportion of unique domains that have been rated by News Guard
}
\description{
A function to get summary data by coordinated component
}
\details{
The gini values are computed by using the Gini coefficient on the proportions of unique domains each component shared. The Gini coefficient is a measure of the degree of concentration (inequality) of a variable in a distribution.
It ranges between 0 and 1: the more nearly equal the distribution, the lower its Gini index. When a component shared just one domain, the value of the variable is set to 1. It is calculated separately for full_domains (e.g. www.foxnews.com, video.foxnews.com) and parent domains (foxnews.com)

The cooRscore.avg is a measures of component coordination. Higher values implies higher coordination.
Its value is calculated by dividing, for each entity in a coordinated network, its \code{\link[igraph]{strength}} by its \code{\link[igraph]{degree}}, and then calculating the average by component of these values.

The cooRshare_ratio.avg is an addional measure of component coordination ranging from 0 (no shares coordinated) to 1 (all shares coordinated).
}
\examples{
  # get the top ten posts containing URLs shared by each network component and by engagement
  component_summary <- get_component_summary(output)

  # clustering the components rowwise mutate
  clusters <- hclust(dist(component_summary[, 2:4]))
  plot(clusters)

}
